Git鼓励大量使用分支：

查看分支：git branch

创建分支：git branch <name>

切换分支：git checkout <name>

创建+切换分支：git checkout -b <name>

合并某分支到当前分支：git merge <name>

删除分支：git branch -d <name>




主分支合并分支

去自己的工作分支
$ git checkout work
工作
....
提交工作分支的修改
$ git commit -a
回到主分支
$ git checkout master
获取远程最新的修改，此时不会产生冲突
$ git pull
回到工作分支
$ git checkout work
用rebase合并主干的修改，如果有冲突在此时解决
$ git rebase master
回到主分支
$ git checkout master
合并工作分支的修改，此时不会产生冲突。
$ git merge work
提交到远程主干
$ git push


从远程仓库主分支上获取最新代码，并合并到本地自己的分支上

git checkout master //可不操作
git merge dev/master //可不操作
git checkout dev     //可不操作
git pull origin master //在自己本地分支进行
git status
git add .
....


本地文件上传到github

首先需要在github上新建一个空项目，此时将得到项目地址：
git init  #初始化本地仓库
git add . 
git commit -m '' #将文件commit到本地仓库
git remote add origin https://github.com/username/   #添加远程仓库，origin只是一个远程仓库的别名，可随意
git push -u origin master  #将本地仓库push远程仓库，并将origin设置为默认远程仓库
git pull origin master

....
git opush origin master


/***************************/
git 回滚
git log //查看日至
git reset --hard 【merge前的版本号】


